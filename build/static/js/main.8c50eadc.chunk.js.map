{"version":3,"sources":["components/common/grid.module.scss","i18n/zh_CN.message.js","i18n/zh_CN.js","logo.svg","components/common/grid.jsx","i18n/LocaleProvider.js","App.js","serviceWorker.js","index.js","i18n/en_US.message.js","i18n/en_US.js"],"names":["module","exports","wei-grid","wei-grid-item","wei-grid-item-1","wei-grid-item-2","wei-grid-item-3","wei-grid-item-4","wei-grid-item-5","wei-grid-item-6","wei-grid-item-7","wei-grid-item-8","wei-grid-item-9","wei-grid-item-10","wei-grid-item-11","wei-grid-item-12","wei-grid-item-13","wei-grid-item-14","wei-grid-item-15","wei-grid-item-16","wei-grid-item-17","wei-grid-item-18","wei-grid-item-19","wei-grid-item-20","wei-grid-item-21","wei-grid-item-22","wei-grid-item-23","wei-grid-item-24","zh_CN","Object","objectSpread","react","navArea","grid","window","appLocale","messages","locale","data","appLocaleData","formats","date","normal","hour12","year","month","day","hour","minute","money","currency","__webpack_require__","p","Grid","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","spacing","colStr","child","children","Array","isArray","map","item","key","xs","_spacing","push","react_default","a","createElement","style","paddingLeft","paddingRight","className","styles","colHtml","Component","porpTypes","container","PropTypes","bool","string","defaultProps","LocaleProvider","React","Children","only","childContextTypes","object","App","onChange","index","lang","setState","result","require","default","getLocale","addLocaleData","i18n_LocaleProvider","index_es","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","en_US"],"mappings":"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","file":"static/js/main.8c50eadc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wei-grid\":\"grid_wei-grid__1-Jq7\",\"wei-grid-item\":\"grid_wei-grid-item__2ijIa\",\"wei-grid-item-1\":\"grid_wei-grid-item-1__2TWRF\",\"wei-grid-item-2\":\"grid_wei-grid-item-2__3KInp\",\"wei-grid-item-3\":\"grid_wei-grid-item-3__1jHHG\",\"wei-grid-item-4\":\"grid_wei-grid-item-4__1g2cZ\",\"wei-grid-item-5\":\"grid_wei-grid-item-5__2dWeN\",\"wei-grid-item-6\":\"grid_wei-grid-item-6__2QukH\",\"wei-grid-item-7\":\"grid_wei-grid-item-7__39kOg\",\"wei-grid-item-8\":\"grid_wei-grid-item-8__2p0jb\",\"wei-grid-item-9\":\"grid_wei-grid-item-9__21S70\",\"wei-grid-item-10\":\"grid_wei-grid-item-10__A1NOu\",\"wei-grid-item-11\":\"grid_wei-grid-item-11__18Su8\",\"wei-grid-item-12\":\"grid_wei-grid-item-12__11SPS\",\"wei-grid-item-13\":\"grid_wei-grid-item-13__2H3HI\",\"wei-grid-item-14\":\"grid_wei-grid-item-14__Gi4qe\",\"wei-grid-item-15\":\"grid_wei-grid-item-15__1XAYk\",\"wei-grid-item-16\":\"grid_wei-grid-item-16__2mg38\",\"wei-grid-item-17\":\"grid_wei-grid-item-17__1siM3\",\"wei-grid-item-18\":\"grid_wei-grid-item-18__1UE_7\",\"wei-grid-item-19\":\"grid_wei-grid-item-19__3tkIy\",\"wei-grid-item-20\":\"grid_wei-grid-item-20__1TcBF\",\"wei-grid-item-21\":\"grid_wei-grid-item-21__1RVHD\",\"wei-grid-item-22\":\"grid_wei-grid-item-22__ONz4H\",\"wei-grid-item-23\":\"grid_wei-grid-item-23__2GN08\",\"wei-grid-item-24\":\"grid_wei-grid-item-24__14MGE\"};","const i18n_headers = {\r\n  react: 'React',\r\n  navArea: '导航区'\r\n}\r\n\r\nconst i18n_nav = {\r\n  grid: '栅格'\r\n}\r\n\r\nconst zh_CN = {\r\n  ...i18n_headers,\r\n  ...i18n_nav\r\n};\r\n\r\nexport default zh_CN","import appLocaleData from 'react-intl/locale-data/zh';\r\n// 引入组件多语言\r\nimport zh_CN from './zh_CN.message';\r\n\r\nwindow.appLocale = {\r\n  // 合并所有 messages, 加入组件的 messages\r\n  messages: zh_CN,\r\n  // locale\r\n  locale: 'zh-CN',\r\n\r\n  // react-intl locale-data\r\n  data: appLocaleData,\r\n\r\n  // 自定义 formates\r\n  formats: {\r\n    date: {\r\n      normal: {\r\n        hour12: false,\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n      },\r\n    },\r\n    // 货币\r\n    money: {\r\n      currency: 'CNY',\r\n    },\r\n  },\r\n};\r\n\r\nexport default window.appLocale;","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from './grid.module.scss';\r\n\r\nclass Grid extends Component {\r\n  static porpTypes={\r\n    container: PropTypes.bool,\r\n    spacing: PropTypes.string\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      spacing: this.props.spacing\r\n    }\r\n  }\r\n\r\n  colHtml() {\r\n    let colStr;\r\n    const child = this.props.children;\r\n    const spacing = this.state.spacing;\r\n    const allCol = 24;\r\n    if(!Array.isArray(child)){\r\n      const xs = child.props.xs || allCol;\r\n      const _spacing = child.props.spacing || spacing | 0;\r\n      colStr = (\r\n        <div className={styles['wei-grid-item'] +' '+ styles['wei-grid-item-'+xs]}\r\n          style={{paddingLeft: _spacing, paddingRight: _spacing}}>\r\n          {child.props.children}\r\n        </div>\r\n      )\r\n    }else{\r\n      colStr = [];\r\n      child.map((item, key) => {\r\n        const xs = item.props.xs || 1;\r\n        const _spacing = item.props.spacing || spacing | 0;\r\n        return colStr.push(\r\n          <div key={key}\r\n            style={{paddingLeft: _spacing, paddingRight: _spacing}}\r\n            className={styles['wei-grid-item'] +' '+ styles['wei-grid-item-'+xs]}>\r\n            {item.props.children}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n    return colStr;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={styles['wei-grid']}>\r\n        {this.colHtml()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGrid.defaultProps = {\r\n  container: true,\r\n  spacing: 0\r\n};\r\n\r\nexport default Grid;\r\n","// 提供国际化上下文\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass LocaleProvider extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.any,\r\n    locale: PropTypes.object,\r\n  };\r\n\r\n  static childContextTypes = {\r\n    // 语言信息\r\n    locale: PropTypes.object,\r\n  };\r\n\r\n  getChildContext() {\r\n    return {\r\n      locale: {\r\n        ...this.props.locale,\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return React.Children.only(this.props.children);\r\n  }\r\n}\r\n\r\nexport default LocaleProvider;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './style/app.scss';\r\nimport Grid from './components/common/grid';\r\n\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\nimport LocaleProvider from './i18n/LocaleProvider';\r\n/**\r\n * 获取国际化资源文件\r\n *\r\n * @param {any} lang\r\n * @returns\r\n */\r\nfunction getLocale(lang) {\r\n  /* eslint-disable global-require */\r\n  let result = {};\r\n  switch (lang) {\r\n    case 'zh-CN':\r\n      result = require('./i18n/zh_CN');\r\n      break;\r\n    case 'en-US':\r\n      result = require('./i18n/en_US');\r\n      break;\r\n    default:\r\n      result = require('./i18n/zh_CN');\r\n  }\r\n\r\n  return result.default || result;\r\n  /* eslint-enable global-require */\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lang: 'zh-CN',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 切换语言\r\n   *\r\n   * @param {any} index 语言序号\r\n   */\r\n  onChange = (index) => {\r\n    const lang = index === 0 ? 'zh-CN' : 'en-US';\r\n    this.setState({\r\n      lang,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { lang } = this.state;\r\n    const appLocale = getLocale(lang);\r\n    addLocaleData(appLocale.data);\r\n    return (\r\n      <LocaleProvider locale={appLocale}>\r\n        <IntlProvider\r\n          locale={appLocale.locale}\r\n          messages={appLocale.messages}\r\n          formats={appLocale.formats}\r\n        >\r\n          <div className=\"App\">\r\n            <header className=\"App-header\">\r\n              <Grid container spacing={20}>\r\n                <Grid item xs={2} spacing={10}>\r\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                  <span className=\"logo-title\">React</span>\r\n                </Grid>\r\n                <Grid item xs={16}>\r\n                导航区\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                操作区\r\n                </Grid>\r\n              </Grid>\r\n            </header>\r\n            <div className=\"App-wrapper\">\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={4}></Grid>\r\n                <Grid item xs={20}>\r\n                  <div></div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        </IntlProvider>\r\n      </LocaleProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/reset.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","const i18n_headers = {\r\n  react: 'React',\r\n  navArea: 'Nav area'\r\n}\r\n\r\nconst i18n_nav = {\r\n  grid: 'Grid'\r\n}\r\n\r\nconst en_US = {\r\n  ...i18n_headers,\r\n  ...i18n_nav\r\n};\r\n\r\n\r\nexport default en_US;","import appLocaleData from 'react-intl/locale-data/en';\r\n// 引入组件多语言\r\nimport en_US from './en_US.message';\r\n\r\nwindow.appLocale = {\r\n  // 合并所有 messages, 加入组件的 messages\r\n  messages: en_US,\r\n\r\n  // locale\r\n  locale: 'en-US',\r\n\r\n  // react-intl locale-data\r\n  data: appLocaleData,\r\n\r\n  // 自定义 formates\r\n  formats: {\r\n    date: {\r\n      normal: {\r\n        hour12: false,\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n      },\r\n    },\r\n    // 货币\r\n    money: {\r\n      currency: 'USD',\r\n    },\r\n  },\r\n};\r\n\r\nexport default window.appLocale;"],"sourceRoot":""}